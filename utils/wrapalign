#!/usr/bin/perl

use warnings;
use strict;

local $/ = "";

my $lw = 160;

if (@ARGV && $ARGV[0] =~ /^\d+$/) {
  $lw = shift @ARGV;
}

while (<>) {
  chomp; my $par = $_;
  my @lines = split "\n", $par;
  my @pre = ();
  my @aln = ();
  my @post = ();
  while (my $l = shift @lines) {
    if ($l =~ /^\+\+ /) {
      push @aln, substr($l, 3);
    }
    else {
      if (@aln) { push @post, $l } else { push @pre, $l }
    }
  }

  if (@aln == 5) {
    # $aln[-1] =~ tr |\x21-\x7e|.....,,,,,aaaaaAAAAAbbbbbBBBBBcccccCCCCCdddddDDDDDeeeeeEEEEEfffffFFFFFgggggGGGGGhhhhhHHHHHiiii|;
  }

  for my $l (@pre) { print "$l\n"; }
  print "---\n" if @pre;
  for my $l (@post) { print "$l\n"; }
  print "---\n" if @post;

  my $o = 0;
  if (@aln) {
    while ($o < length($aln[0])) {
      print join "\n", map { '++ ' . substr($_, $o, $lw) } @aln;
      print "\n.\n";
      $o += $lw;
    }
  }
  else {
    print STDERR "No alignment found at $.\n";
  }
  print "---\n" if @aln;
  for my $l (@post) { print "$l\n"; }
  print "---\n" if @post;
  print "\n\n";
}

